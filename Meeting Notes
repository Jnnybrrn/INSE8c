Software Engineering Meeting Note

--3rd November 2014--
George, Jon, Abdulrazaq, Dipo

We met in the library to distrubute sheets to those not present for the handout. We introduced ourselves and 
very brielfy went over the coursework spec. It became apparent that we needed to thoroughly read this and take notes 
so we just discussed our strengths, weaknesses and ideas. We briefly touched on who would like each role but mainly 
used this as an introduction and decided the work to be done for the next meeting.

This was the first group meeting. Objectives to complete for next meeting
Read through coursework sheet and take notes
Select what role you wish to take (NOT coding roles project roles) etc Team secretary, Webmaster etc.
Ask Kit the limitations of using pre built software, if we even can use excel/ docs.
Come up with suggested languages with reasons.

--8th November 2014--
Stewart, George, Jon, Abdulrazaq

In the second meeting. Bringing our notes and ideas back we decided today we need to figure out. What we will build, 
who it will be for and what we will use to build it. In addition we would like to figure out who take what managerial roles. 
We started by getting everyone introduced to GitHub, then we looked at the options for graphical output.

C, C++
Clunky, only works on one format, requires installing, not mobile friendly.
Java
Requires compiler / interpreter making d/l large. Could be mobile friendly IF made into app but otherwise one platform.
Python
Prior experience says python really doesn’t work well.
Web
Need to configure client and server side seperately. Portable will work on all, with just minor CSS changes. More user friendly as needs no install.
Pure Tablet / Mobile
Would look most professional w/ inbuilt OS icons and stuff, not really platform of choice for big planning.

We have chosen to go with Web for now as it seems most appropriate. 

What : We envision a front page which has options to add, remove, edit and a list of items. From this central data we can generate the different charts.

Who: Students mainly, we are going to distribute a survey to get some ideas for how to make the UI etc

Platform & tech : Graphics - Canvas or SVG / combo / webpage
	          Database - for file purposes and generating bits
		  UI       - web, php and js mainly forms. As neat as possible. Simple

WHO DOES WHAT?

Progess Chaser - George, make sure all working to plans on time.
Team secretary - Jon, maintain cloud resources. Notes, GIT, Files etc (Second: Dipo)
GitMaster - Stewart, maintain GIT (Second: George)
Webmaster - Dipo, keep all server things working (Second: Jon)
DatabaseMaster - Abdulrazaq, keep all database working. (Second: Stewart)

BUGMASTER - ALL, WE WILL BOUNCE IDEAS TO FIX AROUND ALL

What to do before next meeting. (Wed 12th)
George - Survey
Stewart - Get familiar with GitHUB
Jon - Research other options : C++ / Desktop
Abdulrazaq - Research other options: Mobile
Dipo - Research WEB options for Graphics & set up GitHUB

(All to distribute)

--12th November 2014-- 
George, Stewart, Dipo, Jon, Abdulrazaq

Started putting our team plan together, mainly focusing on the WBT and PERT.  
We also carried on discussion about which platform to use, despite mainly looking at web last time. 
John found what looked like some good graphics libraries for C, so we decided to do some basic graphics in each 
of the platforms to get an idea of what would work best. 

Next meeting: 
Start trying out graphics in different platform languages. (e.g: html, java, C etc…) 
Pros + Cons on choices: 
	-Java/ Python
	-C++
	-Web 
	-Mobile


--16th November 2014--
George, Jon, Dipo, Abdulrazaq

We started looking at web options,

Ask kit about: If we can use famework/ packages in our project. 

Test
--8th November 2014--
Stewart, George, Jon, Abdulrazaq

In the second meeting. Bringing our notes and ideas back we decided today we need to figure out. What we will build, 
who it will be for and what we will use to build it. In addition we would like to figure out who take what managerial roles. 
We started by getting everyone introduced to GitHub, then we looked at the options for graphical output.

C, C++
Clunky, only works on one format, requires installing, not mobile friendly.
Java
Requires compiler / interpreter making d/l large. Could be mobile friendly IF made into app but otherwise one platform.
Python
Prior experience says python really doesn’t work well.
Web
Need to configure client and server side seperately. Portable will work on all, with just minor CSS changes. More user friendly as needs no install.
Pure Tablet / Mobile
Would look most professional w/ inbuilt OS icons and stuff, not really platform of choice for big planning.

We have chosen to go with Web for now as it seems most appropriate. 

What : We envision a front page which has options to add, remove, edit and a list of items. From this central data we can generate the different charts.

Who: Students mainly, we are going to distribute a survey to get some ideas for how to make the UI etc

Platform & tech : Graphics - Canvas or SVG / combo / webpage
	          Database - for file purposes and generating bits
		  UI       - web, php and js mainly forms. As neat as possible. Simple

WHO DOES WHAT?

Progess Chaser - George, make sure all working to plans on time.
Team secretary - Jon, maintain cloud resources. Notes, GIT, Files etc (Second: Dipo)
GitMaster - Stewart, maintain GIT (Second: George)
Webmaster - Dipo, keep all server things working (Second: Jon)
DatabaseMaster - Abdulrazaq, keep all database working. (Second: Stewart)

BUGMASTER - ALL, WE WILL BOUNCE IDEAS TO FIX AROUND ALL

What to do before next meeting. (Wed 12th)
George - Survey
Stewart - Get familiar with GitHUB
Jon - Research other options : C++ / Desktop
Abdulrazaq - Research other options: Mobile
Dipo - Research WEB options for Graphics & set up GitHUB

(All to distribute)

--12th November 2014-- 
George, Stewart, Dipo, Jon, Abdulrazaq

Started putting our team plan together, mainly focusing on the WBT and PERT.  
We also carried on discussion about which platform to use, despite mainly looking at web last time. 
John found what looked like some good graphics libraries for C, so we decided to do some basic graphics in each 
of the platforms to get an idea of what would work best. 

Next meeting: 
Start trying out graphics in different platform languages. (e.g: html, java, C etc…) 
Pros + Cons on choices: 
	-Java/ Python
	-C++
	-Web 
	-Mobile


--16th November 2014--
George, Jon, Dipo, Abdulrazaq

Dicussed pros and cons about all the diffrent platforms and languages. We've come to the solid decision of using Web. 

Adv of Java: 
-Fully object-oriented language faciliating modular design. 
-Desktop platform dependant 
-Secure
DisAd of Java: 
-Slower than C++, and many other languages. 
-Strictly typed.
-Not sutiable for scripting.
-Requires install of the JDK

Adv of python 
-free availability , python is open source
-good support for objjects , modules  and other reusability mechanisims 
-Easy integrqation with and extensibility using c and java. 
-Allows scripting.
DisAd Of Python: 
-Lack of multiprocessor support.
-Abbsence of commercial support point, even for an open source project(Though this situation is changing) 
-Software performance(though benchmarks repeatedly demonstrate python is comparable to java in most applications).

AdV Of C++ ( It's best suited for general purpose and low level programming) 
-Extremely fast
-Works very well for GUI programming on a computer 
-Good lanugage to write OSs, drivers and platform dependant apps
DisAd of C++ :
-Although it is platform dependants, it's mostly used for platform specific apps.
-A libary set is usually chosen that locks you into a single platform or OS
-Overly complex for very large high level programs.
-Overly complex and difficult to de-bug when used in web applications. 

Adv of Web 
-Lower costs 
-Allow progrmamers to pass cost savings on to end users. 
-Allow for quicker development of apps.


github dev pack
kineticjs - libary (Dragging and dropping) 
twitter bootstrap 
php backend 

For next meeting - 

Read thru /Libraries on the Git, get familiar with the options.
Take notes and bring cool ideas to next meeting.

--26th November 2014--
George, Jon,Abdulrazaq
No one brought cool ideas.

Data storage - What type of data are we going to be storing 
	     - How are we going to store it?

	Consider: 	http://www.w3schools.com/html/html5_webstorage.asp
	
	
	
